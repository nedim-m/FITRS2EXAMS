// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using exam.Services.Database;

#nullable disable

namespace exam.Services.Migrations
{
    [DbContext(typeof(ExamContext))]
    [Migration("20250128194748_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("exam.Service.Database.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Bog i batina.",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Tu i tamo moze nesto.",
                            Name = "Uposlenik"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Obicni smrtnik.",
                            Name = "Korisnik"
                        });
                });

            modelBuilder.Entity("exam.Service.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@admin.com",
                            FirstName = "Admin",
                            LastName = "Admin",
                            PasswordHash = "C5fuEDcAxNxDuUXqOJCU9DYfLpM=",
                            PasswordSalt = "qQ0nSvQ4rOy3pP/Zi95wIw==",
                            Phone = "061399232",
                            RoleId = 1,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "uposlenik@uposlenik.com",
                            FirstName = "Uposlenik",
                            LastName = "Uposlenik",
                            PasswordHash = "C5fuEDcAxNxDuUXqOJCU9DYfLpM=",
                            PasswordSalt = "qQ0nSvQ4rOy3pP/Zi95wIw==",
                            Phone = "061399233",
                            RoleId = 2,
                            UserName = "uposlenik"
                        },
                        new
                        {
                            Id = 3,
                            Email = "korisnik@korisnik.com",
                            FirstName = "Korisnik",
                            LastName = "Korisnik",
                            PasswordHash = "C5fuEDcAxNxDuUXqOJCU9DYfLpM=",
                            PasswordSalt = "qQ0nSvQ4rOy3pP/Zi95wIw==",
                            Phone = "061222333",
                            RoleId = 3,
                            UserName = "korisnik"
                        });
                });

            modelBuilder.Entity("exam.Service.Database.User", b =>
                {
                    b.HasOne("exam.Service.Database.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("exam.Service.Database.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
